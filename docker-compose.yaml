version: '3.8'

services:
  # PostgreSQL сервис
  db:
    image: postgres:13
    container_name: postgres_db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Node.js + Express сервис
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
      args:
        - USER_ID=${UID}
        - GROUP_ID=${GID}
    container_name: express_server
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=5432
      - NODE_ENV=development
      - USER_ID=${UID}
      - GROUP_ID=${GID}
    ports:
      - "5000:5000"
    volumes:
      - ./server:/app
      - /app/node_modules
    networks:
      - app-network
    restart: unless-stopped

  # React клиент
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        - USER_ID=${UID}
        - GROUP_ID=${GID}
    container_name: react_client
    depends_on:
      - server
    environment:
      - NODE_ENV=development
      - USER_ID=${UID}
      - GROUP_ID=${GID}
    ports:
      - "3000:3000"
    volumes:
      - ./client:/app
      - /app/node_modules
    networks:
      - app-network
    stdin_open: true
    tty: true

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
